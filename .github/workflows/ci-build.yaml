name: CI Build

on:
  push:
  pull_request:

jobs:
  phpt-test:
    name: "PHPT Tests"
    services:
      elasticsearch:
        image: elasticsearch:7.13.1
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
      memcached:
        image: memcached
        ports:
          - 11211:11211
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - 7.1.9
          - 7.1.33
          - 7.2.0
          - 7.2.34
          - 7.3.0
          - 7.3.33
          - 7.4.0
          - 7.4.27
          - 8.0.0
          - 8.0.14
          - 8.1.0
          - 8.1.1
        zts-mode:
          - zts
          - nts
        php-options:
          - "--with-curl"
          - ""
    steps:
      - uses: actions/checkout@v2

      - name: "Set ZTS mode, PHP 8+"
        if: ${{ matrix.zts-mode == 'zts' && startsWith(matrix.php-version, '8.') }}
        run: echo "zts_flag=--enable-zts" >> $GITHUB_ENV
      - name: "Set ZTS mode, PHP 7"
        if: ${{ matrix.zts-mode == 'zts' && startsWith(matrix.php-version, '7.') }}
        run: echo "zts_flag=--enable-maintainer-zts" >> $GITHUB_ENV
      - name: "Set NTS mode"
        if: ${{ matrix.zts-mode == 'nts' }}
        run: echo "zts_flag=" >> $GITHUB_ENV

      - name: "Install PHP ${{ matrix.php-version }} (${{ env.zts_flag}} ${{ matrix.php-options }})"
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install software-properties-common build-essential autoconf libxml2-dev libsqlite3-dev libcurl4-openssl-dev
          cd /tmp
          FINAL_DOWNLOAD_URL="https://www.php.net/distributions/php-${{ matrix.php-version }}.tar.gz"
          echo "Downloading release from $FINAL_DOWNLOAD_URL ..."
          wget $FINAL_DOWNLOAD_URL
          tar zxf php-${{ matrix.php-version }}.tar.gz
          cd php-${{ matrix.php-version }}
          ./configure --enable-debug --with-openssl ${{ env.zts_flag}} ${{ matrix.php-options }}
          make -j$(nproc)
          sudo make install
          cd $GITHUB_WORKSPACE
      - name: "Update PEAR/PECL channels"
        run: |
          sudo pear update-channels
          sudo pecl update-channels
      - name: "Install Redis extension"
        run: |
          echo '' | sudo pecl install redis
      - name: "Install Memcached extension"
        run: |
          sudo apt-get install libmemcached-dev
          echo '' | sudo pecl install memcached
      - name: "Base PHP configuration dump (information)"
        run: php -i
      - name: "Build scoutapm extension"
        run: |
          phpize
          ./configure --enable-scoutapm --enable-scoutapm-dev
          make
      - name: "Run the tests"
        run: |
          php run-tests.php -p `which php` -d zend_extension=`pwd`/modules/scoutapm.so -d extension=memcached.so -d extension=redis.so -g "FAIL,XFAIL,BORK,WARN,LEAK,SKIP" --offline --show-diff --set-timeout 120 -q
      - name: "Run the benchmark"
        run: |
          sudo apt update && sudo apt install time
          ./benchmark.sh
          ./benchmark.sh -w

  check-pecl-valid:
    name: "Check PECL Package validity"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "8.0"
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: pecl
      - name: "Validate PECL Package"
        run: pecl package-validate
      - name: "Verify PECL Package Build"
        run: pecl package
